package edu.kh.jdbc1;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

public class JDBCExample {
	public static void main(String[] args) {
		
		// JDBC : JAVA에서 DB에 연결(접근) 할 수 있게 해주는 JAVA Programming API
		//													 (JAVA에 기본 내장된 인터페이스)
		// java.sql 패키지에서 제공
		
		// * JDBC를 이용한 애플리케이션을 만들 때 필요한 것 
		// 1. JAVA의 JDBC 관련 인터페이스 
		// 2. DBMS(Oracle) 
		// 3. Oracle에서 Java 애플리케이션과 연결할 때 사용할 
		// 	  JDBC를 상속받아 구현한 클래스모음(ojdbc11.jar 라이브러리)
		//	  -> OracleDriver.class (JDBC 드라이버) 이용 
		
		// 1단계 : JDBC 객체 참조 변수 선언 (java.sql 패키지의 인터페이스)
		
		Connection conn = null;
		// DB연결 정보를 담은 객체 
		// -> DBMS 타입, 이름, IP, Port, 계정명, 비밀번호 저장
		// -> DBeaver계정 접속 방법과 유사함
		// * DB와 JAVA사이를 연결해주는 통로(Stream과 유사함)
		
		// 2단계 : 참조 변수에 알맞은 객체 대입 
		
		Statement stmt = null;
		// Connection을 통해 SQL문을 DB에 전달하여 실행하고 
		//생성된 결과(ResultSet, 성공항 행의 개수)를 반환(Java)하는데 사용되는 객체
		
		ResultSet rs = null;
		// SELECT 질의 성공 시 반환되는데
		// 조회 결과 집합을 나타내는 객체
		
		
		// 3단계 : SQL을 수행해서 반환 받은 결과(ResultSet)를 한행씩 접근해서 컬럼값 얻어오기.
		// 4단계 : 사용한 JDBC 객체 자원 반환( close() )
		// ResultSet, Statement, Connection 닫기 (생성 역순으로 닫는 것을 권장)
	}
}
